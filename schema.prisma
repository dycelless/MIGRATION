// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Jenis_Kelamin {
  P
  L
}

enum Status {
  SUDAH 
  BELUM 
}

enum Method {
  CASH 
  QRISS 
  DEBIT 
}

model Alat {
  id              Int           @id @default(autoincrement())
  name            String        @default("")
  color           String        @default("")
  stock           Int           @default(0)
  price           Int           @default(0)
  merk            String        @default("")
  pict            String        @default("")
  createdAt       DateTime      @default(now())
  updateAt        DateTime      @updatedAt
  detailtransaksi DetailTransaksi[]
}

model User {
  id              Int           @id @default(autoincrement())
  email           String        @unique @default("")
  pasword         String        @default("")
  name            String        @default("")
  no_telp         String        @default("")
  alamat          String        @default("") @db.Text
  jenis_kelamin   Jenis_Kelamin @default(P)
  createdAt       DateTime      @default(now())
  updateAt        DateTime      @updatedAt
  detailuser      Transaksi[]
}

model Karyawan {
  id              Int           @id @default(autoincrement())
  email           String        @unique @default("")
  password        String        @default("")
  name            String        @default("")
  no_telp         String        @default("")
  alamat          String        @default("") @db.Text
  jenis_kelamin   Jenis_Kelamin @default(P)
  createdAt       DateTime      @default(now())
  updateAt        DateTime      @updatedAt
  detailkaryawan  Transaksi[]
}

model Transaksi {
  id              Int         @id @default(autoincrement())
  user            User?       @relation(fields: [idUser], references: [id])
  idUser          Int?
  karyawan        Karyawan?   @relation(fields: [idKaryawan], references: [id])
  idKaryawan      Int?
  totalPrice      Int         @default(0)
  statusBayar     Status      @default(SUDAH)
  tglTransaksi    DateTime    @default(now())
  payment_method  Method      @default(CASH)
  tanggal_mulai   DateTime    @default(now())
  tanggal_akhir   DateTime    @default(now())
  bukti_bayar     String      @default("")
  createdAt       DateTime    @default(now())
  updateAt        DateTime    @updatedAt
  detailTransaksi DetailTransaksi[]
}

model DetailTransaksi {
  id              Int         @id @default(autoincrement())
  idTransaksi     Int?
  transaksi       Transaksi?  @relation(fields: [idTransaksi], references: [id])
  idAlat          Int?
  alat            Alat?       @relation(fields: [idAlat], references: [id])
  jumlah          Int         @default(0)
  subtotal        Int         @default(0)
  createdAt       DateTime    @default(now())
  updateAt        DateTimeÂ    @updatedAt
}
